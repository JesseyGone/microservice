#
spring:
  cloud:
    config:
      # 不与Eureka配合时，直接指定config server的uri等信息即可
#      # 对应config server所获取的配置文件中的{application}
#      name: microservice-provider-user
#      # 指定config server的地址
#      uri: http://localhost:8020/
#      # profile对应config server所获取的配置文件中的{profile}
#      profile: dev
#      # 指定Git仓库的分支，对应config server所获取配置文件的{label}
#      label: master
      # 与Eureka配合时，只需要将config server注册到Eureka即可
      profile: dev
      label: master
      discovery:
        enabled: true
        service-id: microservice-config-server
eureka:
  client:
    service-url:
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/ # hosts设置添加：127.0.0.1 peer1 peer2
